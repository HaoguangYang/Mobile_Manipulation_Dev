<launch>
<!-- LIDAR scan init -->
	<node name="urg_node" pkg="urg_node" type="urg_node" >
	    <param name="ip_address" value="128.46.112.250"/>
	    <param name="angle_min" value="-1.2"/>
        <param name="angle_max" value="1.3"/>
	</node>    

<!-- Load a Map  -->
	<arg name="map_file" default="$(find pcv_base)/resources/map/imi1.yaml"/>
	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

<!-- base to baselink -->
<node pkg="tf" type="static_transform_publisher" name="base_to_baselink" args="0.0 0.0 0.0 0.0 0.0 0.0 base_link /base 100" />

	<!-- static transform -->
	<node pkg="tf" type="static_transform_publisher" name="base_to_laser" args="0.27 0.0 0.15 0.0 0.0 0.0 /base /laser 100" />

<!-- use hector_mapping for providing odometry to amcl  -->
	<arg name="map_size" default="2048"/>
	<arg name="map_resolution" default="0.05"/>


	<!-- localization using amcl -->
	<node pkg="amcl" type="amcl" name="amcl">
		<param name="base_frame_id" value="/base" />
		<param name="global_frame_id" value="/map" />
		<param name="odom_frame_id" value="/odom" />
	    <param name="odom_model_type" value="omni" />
	</node>

<!-- Set Run PD flag -->
    <param name="runPD_q" type="int" value="1" />
<!-- Motion controller script -->
    <param name="controller_file" type="string" value="map_follower_gbase.py"/>
<!-- Run map_follower -->
	<node name="rally_ui" pkg="wall_follower" type="omniv_ui.py" output="screen" required="true"/> 

<!-- python script: fetch way points and display on map -->
	<node pkg="wall_follower" type="waypoint.py" output="screen" name="waypoint" />	

<!-- python script: Serial read write to arduino -->
<!--	<node pkg="wall_follower" type="serial_rw_trim.py" output="screen" name="serial_ard" />	-->	
	
<!-- Visualisation RVIZ -->
	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find wall_follower)/resources/rally_ui.rviz"/>

</launch>
